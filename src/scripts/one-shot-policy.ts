import {
  applyParamsToScript,
  MintingPolicy,
  ScriptType,
} from '@lucid-evolution/lucid';
import { castOneShotParams, OneShotParams } from '../types/one-shot';

/**
Generated from this code in Aiken v1.1.13

use aiken/collection/list
use cardano/assets.{AssetName, PolicyId}
use cardano/transaction.{OutputReference, Transaction, find_input}

pub type MintAmount {
  token_name: AssetName,
  amount: Int,
}

pub type OneShotParams {
  ref_out_ref: OutputReference,
  mint_amounts: List<MintAmount>,
}

validator one_shot(params: OneShotParams) {
  mint(_redeemer: Void, policy_id: PolicyId, self: Transaction) {
    expect Some(_) = find_input(self.inputs, params.ref_out_ref)

    let expected_mint =
      list.foldl(
        params.mint_amounts,
        assets.zero,
        fn(entry, acc) {
          acc |> assets.add(policy_id, entry.token_name, entry.amount)
        },
      )

    expect assets.match(self.mint, expected_mint, ==)

    True
  }

  else(_) {
    fail
  }
}
 */

const oneShotPolicyData = {
  type: 'PlutusV3' as ScriptType,
  cborHex:
    '590426010100229800aba4aba2aba1aba0aab9faab9eaab9dab9a4888888896600264653001300800198041804800cdc3a400130080024888966002600460106ea800e33001375c601860126ea800eb300130023008375400915980098049baa0048a4d16402916401d374a90002444b30013005300b37546466446600400400244b30010018a60103d87a80008992cc004cdd7980998081baa0010048980299809000a5eb8226600600660280048070c0480050101bac3010300d375400a601e60186ea804e2b3001332259800800c52844ca600264b30013009300f37540031375a602060266eacc04cc040dd5000c5200040386024003375e6024602600337560049112cc0040062b3001300200589805801c52820208992cc004cdd79809000a610140008acc004cdc38021bad301330163756602600313003374c602e00514a0808a2b3001300c00489801803452820224044602a0028098653001001801c88cc04c008cc04cdd3000a5eb810011112cc00400a266002980103d87a80004bd6f7b63044ca60026eb8c0440066eacc048006602c0069112cc004cdc8a441000038acc004cdc7a4410000389980298051980b9ba60024bd70000c4cc015300103d87a8000006404d19800803c006446600e0046603266ec0dd48029ba6004001401c8098602800480922942294229410131bab300f3010301030103010300c37540086e98c8ca600200337586004601c6ea805697adef6c604004444b30010028800c66002007301400299914c004c0040066eb8c054c048dd50014dd6980318091baa002488966002601c00310068991919800800804112cc00400626603466ec0dd48079ba60034bd6f7b63044ca60026eb8c0600066eacc064006603a0049112cc004cdc8009801c4cc078cdd81ba9013374c00e00b15980099b8f0130038992cc004c058c070dd5000c4cc07ccdd81ba90143020301d37540020051002406c64b300159800800c528c528203c8a6103d87a8000898091980f9ba60014bd70203632330010010032259800800c4cc080cdd81ba900b375001497adef6c608994c004dd7180f000cdd6980f800cc08c0092225980099b9000f00389981219bb0375201e6ea00380162b30013371e01e00713259800980e18111baa00189981299bb03752020604c60466ea800400a20048108c966002603800314c103d87a80008980c198129ba80014bd7020423370000401d133024337606ea400cdd400119803003000a04040803021001407d13301e337606ea400cdd300119803003000a0344068301b0014064646400460080026602e66ec0dd48011ba80014bd6f7b63020261809801112cc00400629344c966002003149a264b3001337206eb8c04cc05c00cdd71809800c4cc010010cc058004c06000a2c8090c058005014180b000a026400c80888c040c04400629462c80522c805116401c300800130033754013149a26cac8009',
};

export function mkOneShotPolicy(params: OneShotParams): MintingPolicy {
  return {
    type: oneShotPolicyData.type,
    script: applyParamsToScript(oneShotPolicyData.cborHex, [
      castOneShotParams(params),
    ]),
  };
}
